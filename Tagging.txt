Like most VCSs, Git has the ability to tag specific points in history as 
being important. Typically people use this functionality to mark release 
points (v1.0, and so on). In this section, you’ll learn how to list the 
available tags, how to create new tags, and what the different types of 
tags are. To list the availabe tags in git, the command is: git tag.
Git lists the tags in alphabetical order. You can also search for tags
with a particular pattern by using: git tag -1 'specific pattern', like:
git tag -1 'v1.8.5'. Git uses two main types of tags: lightweight and 
annotated. A lightweight tag is very much like a branch that doesn't change-
it's just a pointer to a specific commit.  Annotated tags, however, are
stored as full objects in the Git database.  They're checksummed; contain
the tagger name,e-mail, and date; have a tagging message; and can be signed
and verified with GNU Privacy Guard.  It is gennerally recommended that you 
create annotated tags so you can have all this information. To create an annotated
tag, you use: git tag -a tagname -m "my tag message", for example:
git tag -a v1.4 -m "my version 1.4". If you don’t specify a message for 
an annotated tag (the -m), Git launches your editor so you can type it in.
You can see the tag data along with the commit that was tagged by using the 
git show tagname command. To make a lightweight tag, use the command:
git tag tagname WITHOUT supplying -a, -s, or -m.You can also tag commits 
after you’ve moved past them. Suppose your commit history looks like this:
9fceb02d0ae598e95dc970b74767f19372d61af8 updated rakefile, you can use the
command: git tag -a tagname 9fceb02 to add the commit to the tag. When you
specify the commit SHA-1, it doesn't have to be the whole code. By default,
the git push command doesn't transfer tags to remote servers.You will have to
explicity push tags to a shared server after you have created them. You do this
by using: git push origin tagname.If you have a lot of tags that you want to push 
up at once, you can also use the --tags option to the git push command. This will 
transfer all of your tags to the remote server that are not already there. Example:
git push origin --tags.